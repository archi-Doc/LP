// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using Arc.Unit;
using Netsphere;
using Netsphere.Server;

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS1998

namespace Netsphere.Generated;

internal static class Backend_NetsphereTest2
{
    private static bool Initialized;

    [ModuleInitializer]
    public static void Initialize()
    {
        if (Initialized) return;
        Initialized = true;

        StaticNetService.SetServiceInfo(Backend_5bb6d0fa.ServiceInfo_b13899db());
        StaticNetService.SetServiceInfo(Backend_5bb6d0fa.ServiceInfo_ad6f1788());
        StaticNetService.SetServiceInfo(Backend_23b124e6.ServiceInfo_4363baf9());
        StaticNetService.SetServiceInfo(Backend_f3a9c97e.ServiceInfo_2ce1324e());
        StaticNetService.SetServiceInfo(Backend_a62721ed.ServiceInfo_9645d0dc());
        StaticNetService.SetServiceInfo(Backend_418f720c.ServiceInfo_bd21d325());
        StaticNetService.SetServiceInfo(Backend_ca12b263.ServiceInfo_cd1942b1());
    }

    private class Backend_5bb6d0fa
    {
        public Backend_5bb6d0fa(ConnectionContext connectionContext)
        {
            var impl = connectionContext.ServiceProvider?.GetService(typeof(NetsphereTest.CustomService)) as NetsphereTest.CustomService;
            if (impl == null)
            {
                impl = new NetsphereTest.CustomService();
            }

            this.__gen_ns_identifier__001 ??= new NetsphereTest.CustomFilter();
            if (this.__gen_ns_identifier__001 == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net filter 'NetsphereTest.CustomFilter'.");
            }
            this.impl = impl;
        }

        private static async Task Method_c14988fa(object obj, TransmissionContext c0)
        {
            var b = (Backend_5bb6d0fa)obj;
            b.__gen_ns_identifier__002 ??= new NetsphereTest.CustomFilter();
            if (b.__gen_ns_identifier__002 == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net filter 'NetsphereTest.CustomFilter'.");
            }
            ((IServiceFilterBase)b.__gen_ns_identifier__002).SetArguments(new object[] { 1, 2, new string?[] { "te", }, 3, });

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__002!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                var owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;

                await ((NetsphereTest.ICustomService)((Backend_5bb6d0fa)obj).impl).Test().ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_b13899db()
        {
            var si = new ConnectionContext.ServiceInfo(0xb13899dbu, static x => new Backend_5bb6d0fa(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xb13899dbc14988faul, Method_c14988fa));
            return si;
        }

        private static async Task Method_ee3ee8f2(object obj, TransmissionContext c0)
        {
            var b = (Backend_5bb6d0fa)obj;
            b.__gen_ns_identifier__003 ??= new NetsphereTest.CustomFilter();
            if (b.__gen_ns_identifier__003 == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net filter 'NetsphereTest.CustomFilter'.");
            }
            ((IServiceFilterBase)b.__gen_ns_identifier__003).SetArguments(new object[] { 9, });

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__003!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                var owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;

                await ((NetsphereTest.ICustomService2)((Backend_5bb6d0fa)obj).impl).Test().ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_ad6f1788()
        {
            var si = new ConnectionContext.ServiceInfo(0xad6f1788u, static x => new Backend_5bb6d0fa(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xad6f1788ee3ee8f2ul, Method_ee3ee8f2));
            return si;
        }

        private NetsphereTest.CustomService impl;
        private NetsphereTest.CustomFilter? __gen_ns_identifier__001;
        private NetsphereTest.CustomFilter? __gen_ns_identifier__002;
        private NetsphereTest.CustomFilter? __gen_ns_identifier__003;
    }

    private class Backend_23b124e6
    {
        public Backend_23b124e6(ConnectionContext connectionContext)
        {
            var impl = connectionContext.ServiceProvider?.GetService(typeof(LP.NetServices.BenchmarkServiceImpl)) as LP.NetServices.BenchmarkServiceImpl;
            if (impl == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net service {typeof(LP.NetServices.BenchmarkServiceImpl).ToString()}.");
            }

            this.__gen_ns_identifier__001 ??= new LP.NetServices.TestFilter();
            if (this.__gen_ns_identifier__001 == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net filter 'LP.NetServices.TestFilter'.");
            }
            this.__gen_ns_identifier__002 ??= connectionContext.ServiceProvider?.GetService(typeof(LP.NetServices.TestFilterB)) as LP.NetServices.TestFilterB;
            if (this.__gen_ns_identifier__002 == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net filter 'LP.NetServices.TestFilterB'.");
            }
            this.impl = impl;
        }

        private static async Task Method_d5e531f7(object obj, TransmissionContext c0)
        {
            var b = (Backend_23b124e6)obj;

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__002!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                var value = context.Owner.Memory.ToArray();

                await ((LP.NetServices.IBenchmarkService)((Backend_23b124e6)obj).impl).Send(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        private static async Task Method_55eff1fc(object obj, TransmissionContext c0)
        {
            var b = (Backend_23b124e6)obj;

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__002!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                var value = context.Owner.Memory.ToArray();

                var result = await ((LP.NetServices.IBenchmarkService)((Backend_23b124e6)obj).impl).Pingpong(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = result != null ? new Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner(result) : default;
            }
        }

        private static async Task Method_414f1dc0(object obj, TransmissionContext c0)
        {
            var b = (Backend_23b124e6)obj;

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__002!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                var owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;

                var result = await ((LP.NetServices.IBenchmarkService)((Backend_23b124e6)obj).impl).Register().ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                if (Netsphere.Block.BlockService.TrySerialize(result, out var owner2))
                {
                    context.Owner = owner2;
                }
                else
                {
                    context.Owner = default;
                    context.Result = NetResult.SerializationError;
                }
            }
        }

        private static async Task Method_85e9adc0(object obj, TransmissionContext c0)
        {
            var b = (Backend_23b124e6)obj;

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__002!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<(int, int)>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                var result = await ((LP.NetServices.IBenchmarkService)((Backend_23b124e6)obj).impl).Start(value.Item1, value.Item2).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                if (Netsphere.Block.BlockService.TrySerialize(result, out var owner2))
                {
                    context.Owner = owner2;
                }
                else
                {
                    context.Owner = default;
                    context.Result = NetResult.SerializationError;
                }
            }
        }

        private static async Task Method_d9372b51(object obj, TransmissionContext c0)
        {
            var b = (Backend_23b124e6)obj;

            await b.__gen_ns_identifier__001!.Invoke(c0, c2 => b.__gen_ns_identifier__002!.Invoke(c0, c1 => Core(obj, c0))).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<LP.NetServices.IBenchmarkService.ReportRecord>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                await ((LP.NetServices.IBenchmarkService)((Backend_23b124e6)obj).impl).Report(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_4363baf9()
        {
            var si = new ConnectionContext.ServiceInfo(0x4363baf9u, static x => new Backend_23b124e6(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x4363baf9d5e531f7ul, Method_d5e531f7));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x4363baf955eff1fcul, Method_55eff1fc));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x4363baf9414f1dc0ul, Method_414f1dc0));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x4363baf985e9adc0ul, Method_85e9adc0));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x4363baf9d9372b51ul, Method_d9372b51));
            return si;
        }

        private LP.NetServices.BenchmarkServiceImpl impl;
        private LP.NetServices.TestFilter? __gen_ns_identifier__001;
        private LP.NetServices.TestFilterB? __gen_ns_identifier__002;
    }

    private class Backend_f3a9c97e
    {
        public Backend_f3a9c97e(ConnectionContext connectionContext)
        {
            var impl = connectionContext.ServiceProvider?.GetService(typeof(NetsphereTest.TestServiceImpl0)) as NetsphereTest.TestServiceImpl0;
            if (impl == null)
            {
                impl = new NetsphereTest.TestServiceImpl0();
            }

            this.impl = impl;
        }

        private static async Task Method_50f72872(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<int>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                await ((NetsphereTest.ITestService2)((Backend_f3a9c97e)obj).impl).Send2(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_2ce1324e()
        {
            var si = new ConnectionContext.ServiceInfo(0x2ce1324eu, static x => new Backend_f3a9c97e(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x2ce1324e50f72872ul, Method_50f72872));
            return si;
        }

        private NetsphereTest.TestServiceImpl0 impl;
    }

    private class Backend_a62721ed
    {
        public Backend_a62721ed(ConnectionContext connectionContext)
        {
            var impl = connectionContext.ServiceProvider?.GetService(typeof(NetsphereTest.TestServiceImpl2)) as NetsphereTest.TestServiceImpl2;
            if (impl == null)
            {
                impl = new NetsphereTest.TestServiceImpl2();
            }

            this.impl = impl;
        }

        private static async Task Method_c6cfd56(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<int>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                await ((NetsphereTest.ITestService)((Backend_a62721ed)obj).impl).Send(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_9645d0dc()
        {
            var si = new ConnectionContext.ServiceInfo(0x9645d0dcu, static x => new Backend_a62721ed(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0x9645d0dc0c6cfd56ul, Method_c6cfd56));
            return si;
        }

        private NetsphereTest.TestServiceImpl2 impl;
    }

    private class Backend_418f720c
    {
        public Backend_418f720c(ConnectionContext connectionContext)
        {
            var impl = connectionContext.ServiceProvider?.GetService(typeof(NetsphereTest.ExternalServiceImpl)) as NetsphereTest.ExternalServiceImpl;
            if (impl == null)
            {
                throw new InvalidOperationException($"Could not create an instance of the net service {typeof(NetsphereTest.ExternalServiceImpl).ToString()}.");
            }

            this.impl = impl;
        }

        private static async Task Method_2d4f9948(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<int>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                await ((NetsphereTest.IExternalService)((Backend_418f720c)obj).impl).SendExternal(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        private static async Task Method_72171d7a(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<int>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                var result = await ((NetsphereTest.IExternalService)((Backend_418f720c)obj).impl).IncrementExternal(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                if (Netsphere.Block.BlockService.TrySerialize(result, out var owner2))
                {
                    context.Owner = owner2;
                }
                else
                {
                    context.Owner = default;
                    context.Result = NetResult.SerializationError;
                }
            }
        }

        private static async Task Method_545adc8b(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<(int, string)>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                var result = await ((NetsphereTest.IExternalService)((Backend_418f720c)obj).impl).SendExternal(value.Item1, value.Item2).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                if (Netsphere.Block.BlockService.TrySerialize(result, out var owner2))
                {
                    context.Owner = owner2;
                }
                else
                {
                    context.Owner = default;
                    context.Result = NetResult.SerializationError;
                }
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_bd21d325()
        {
            var si = new ConnectionContext.ServiceInfo(0xbd21d325u, static x => new Backend_418f720c(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xbd21d3252d4f9948ul, Method_2d4f9948));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xbd21d32572171d7aul, Method_72171d7a));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xbd21d325545adc8bul, Method_545adc8b));
            return si;
        }

        private NetsphereTest.ExternalServiceImpl impl;
    }

    private class Backend_ca12b263
    {
        public Backend_ca12b263(ConnectionContext connectionContext)
        {
            var impl = connectionContext.ServiceProvider?.GetService(typeof(NetsphereTest.ParentClass.NestedServiceImpl3)) as NetsphereTest.ParentClass.NestedServiceImpl3;
            if (impl == null)
            {
                impl = new NetsphereTest.ParentClass.NestedServiceImpl3();
            }

            this.impl = impl;
        }

        private static async Task Method_1d115886(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<(string, int)>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).Send3(value.Item1, value.Item2).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = Arc.Unit.ByteArrayPool.ReadOnlyMemoryOwner.Empty;
            }
        }

        private static async Task Method_8883a265(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<int>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                var result = await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).Increment3(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                if (Netsphere.Block.BlockService.TrySerialize(result, out var owner2))
                {
                    context.Owner = owner2;
                }
                else
                {
                    context.Owner = default;
                    context.Result = NetResult.SerializationError;
                }
            }
        }

        private static async Task Method_1e4bebe1(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                if (!Netsphere.Block.BlockService.TryDeserialize<Arc.Unit.ByteArrayPool.MemoryOwner>(context.Owner, out var value))
                {
                    context.Result = NetResult.DeserializationError;
                    return;
                }

                var result = await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).SendMemoryOwner(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                if (Netsphere.Block.BlockService.TrySerialize(result, out var owner2))
                {
                    context.Owner = owner2;
                }
                else
                {
                    context.Owner = default;
                    context.Result = NetResult.SerializationError;
                }
            }
        }

        private static async Task Method_42ae523f(object obj, TransmissionContext c0)
        {
            await Core(obj, c0).ConfigureAwait(false);

            static async Task Core(object obj, TransmissionContext context)
            {
                var value = context.Owner;

                var result = await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).SendReadOnlyMemoryOwner(value).ValueAsync.ConfigureAwait(false);
                context.Owner.Return();
                context.Owner = result;
            }
        }

        public static ConnectionContext.ServiceInfo ServiceInfo_cd1942b1()
        {
            var si = new ConnectionContext.ServiceInfo(0xcd1942b1u, static x => new Backend_ca12b263(x));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xcd1942b11d115886ul, Method_1d115886));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xcd1942b18883a265ul, Method_8883a265));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xcd1942b11e4bebe1ul, Method_1e4bebe1));
            si.AddMethod(new ConnectionContext.ServiceMethod(0xcd1942b142ae523ful, Method_42ae523f));
            return si;
        }

        private NetsphereTest.ParentClass.NestedServiceImpl3 impl;
    }
}
