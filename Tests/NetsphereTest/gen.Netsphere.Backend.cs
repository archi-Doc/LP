// <auto-generated/>
using System;
using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using Netsphere;

#nullable enable
#pragma warning disable CS1591
#pragma warning disable CS1998

namespace Netsphere.Generated;

internal static class Backend_NetsphereTest
{
    private static bool Initialized;

    [ModuleInitializer]
    public static void Initialize()
    {
        if (Initialized) return;
        Initialized = true;

        StaticNetService.SetServiceInfo(Backend_29db5260.ServiceInfo_1dcfb86f());
        StaticNetService.SetServiceInfo(Backend_f3a9c97e.ServiceInfo_2ce1324e());
        StaticNetService.SetServiceInfo(Backend_a62721ed.ServiceInfo_9645d0dc());
        StaticNetService.SetServiceInfo(Backend_418f720c.ServiceInfo_bd21d325());
        StaticNetService.SetServiceInfo(Backend_ca12b263.ServiceInfo_cd1942b1());
    }

    private class Backend_29db5260
    {
        public Backend_29db5260(IServiceProvider? serviceProvider, ServiceContext context)
        {
            var impl = serviceProvider?.GetService(typeof(NetsphereTest.BenchmarkServiceImpl)) as NetsphereTest.BenchmarkServiceImpl;
            if (impl == null)
            {
                impl = new NetsphereTest.BenchmarkServiceImpl();
            }

            impl.__gen_ns_identifier__001 = context.ServiceFilters.GetOrAdd(typeof(NetsphereTest.TestFilter), x => (IServiceFilter)context.ServiceProvider.GetService(typeof(NetsphereTest.TestFilter)));
            impl.__gen_ns_identifier__002 = context.ServiceFilters.GetOrAdd(typeof(NetsphereTest.TestFilterB), x => (IServiceFilter)context.ServiceProvider.GetService(typeof(NetsphereTest.TestFilterB)));
            ((Netsphere.NetServiceBase)impl).Context = context;
            this.impl = impl;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_d5c029d7(object obj, ByteArrayPool.MemoryOwner receive)
        {
            var value = receive.Memory.ToArray();

            await ((NetsphereTest.IBenchmarkService)((Backend_29db5260)obj).impl).Send(value);
            var result = NetResult.Success;
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_8fd5c589(object obj, ByteArrayPool.MemoryOwner receive)
        {
            var value = receive.Memory.ToArray();

            var result = await ((NetsphereTest.IBenchmarkService)((Backend_29db5260)obj).impl).Pingpong(value);
            return result != null ? new ByteArrayPool.MemoryOwner(result) : default;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_866e005b(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<int>(receive, out var value))
            {
                return default;
            }

            var backend = (Backend_29db5260)obj;
            var c0 = backend.impl.Context;
            var task = ((NetsphereTest.IBenchmarkService)(backend.impl)).Wait(value);
            await task;
            await backend.__gen_ns_identifier__001.Invoke(c0, c1 => new ValueTask(task.ResponseAsync));
            await backend.__gen_ns_identifier__001.Invoke(c0, c1 => backend.__gen_ns_identifier__002.Invoke(c1, c2 => task));
            await ((NetsphereTest.IBenchmarkService)(backend.impl)).Wait(value);
            var result = NetResult.Success;
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        public static NetService.ServiceInfo ServiceInfo_1dcfb86f()
        {
            var si = new NetService.ServiceInfo(0x1dcfb86fu, static (x, y) => new Backend_29db5260(x, y));
            si.AddMethod(new NetService.ServiceMethod(0x1dcfb86fd5c029d7ul, Method_d5c029d7));
            si.AddMethod(new NetService.ServiceMethod(0x1dcfb86f8fd5c589ul, Method_8fd5c589));
            si.AddMethod(new NetService.ServiceMethod(0x1dcfb86f866e005bul, Method_866e005b));
            return si;
        }

        private NetsphereTest.BenchmarkServiceImpl impl;
        private NetsphereTest.TestFilter __gen_ns_identifier__001;
        private NetsphereTest.TestFilterB __gen_ns_identifier__002;
    }

    private class Backend_f3a9c97e
    {
        public Backend_f3a9c97e(IServiceProvider? serviceProvider, ServiceContext context)
        {
            var impl = serviceProvider?.GetService(typeof(NetsphereTest.TestServiceImpl0)) as NetsphereTest.TestServiceImpl0;
            if (impl == null)
            {
                impl = new NetsphereTest.TestServiceImpl0();
            }

            ((Netsphere.NetServiceBase<NetsphereTest.CustomServiceContext>)impl).Context = (NetsphereTest.CustomServiceContext)context;
            this.impl = impl;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_50f72872(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<int>(receive, out var value))
            {
                return default;
            }

            await ((NetsphereTest.ITestService2)((Backend_f3a9c97e)obj).impl).Send2(value);
            var result = NetResult.Success;
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        public static NetService.ServiceInfo ServiceInfo_2ce1324e()
        {
            var si = new NetService.ServiceInfo(0x2ce1324eu, static (x, y) => new Backend_f3a9c97e(x, y));
            si.AddMethod(new NetService.ServiceMethod(0x2ce1324e50f72872ul, Method_50f72872));
            return si;
        }

        private NetsphereTest.TestServiceImpl0 impl;
    }

    private class Backend_a62721ed
    {
        public Backend_a62721ed(IServiceProvider? serviceProvider, ServiceContext context)
        {
            var impl = serviceProvider?.GetService(typeof(NetsphereTest.TestServiceImpl2)) as NetsphereTest.TestServiceImpl2;
            if (impl == null)
            {
                impl = new NetsphereTest.TestServiceImpl2();
            }

            this.impl = impl;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_c6cfd56(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<int>(receive, out var value))
            {
                return default;
            }

            await ((NetsphereTest.ITestService)((Backend_a62721ed)obj).impl).Send(value);
            var result = NetResult.Success;
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        public static NetService.ServiceInfo ServiceInfo_9645d0dc()
        {
            var si = new NetService.ServiceInfo(0x9645d0dcu, static (x, y) => new Backend_a62721ed(x, y));
            si.AddMethod(new NetService.ServiceMethod(0x9645d0dc0c6cfd56ul, Method_c6cfd56));
            return si;
        }

        private NetsphereTest.TestServiceImpl2 impl;
    }

    private class Backend_418f720c
    {
        public Backend_418f720c(IServiceProvider? serviceProvider, ServiceContext context)
        {
            var impl = serviceProvider?.GetService(typeof(NetsphereTest.ExternalServiceImpl)) as NetsphereTest.ExternalServiceImpl;
            if (impl == null)
            {
                throw new InvalidOperationException($"Could not create an instance of net service {typeof(NetsphereTest.ExternalServiceImpl).ToString()}.");
            }

            ((Netsphere.NetServiceBase)impl).Context = context;
            this.impl = impl;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_2d4f9948(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<int>(receive, out var value))
            {
                return default;
            }

            await ((NetsphereTest.IExternalService)((Backend_418f720c)obj).impl).SendExternal(value);
            var result = NetResult.Success;
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_72171d7a(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<int>(receive, out var value))
            {
                return default;
            }

            var result = await ((NetsphereTest.IExternalService)((Backend_418f720c)obj).impl).IncrementExternal(value);
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_545adc8b(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<(int, string)>(receive, out var value))
            {
                return default;
            }

            var result = await ((NetsphereTest.IExternalService)((Backend_418f720c)obj).impl).SendExternal(value.Item1, value.Item2);
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        public static NetService.ServiceInfo ServiceInfo_bd21d325()
        {
            var si = new NetService.ServiceInfo(0xbd21d325u, static (x, y) => new Backend_418f720c(x, y));
            si.AddMethod(new NetService.ServiceMethod(0xbd21d3252d4f9948ul, Method_2d4f9948));
            si.AddMethod(new NetService.ServiceMethod(0xbd21d32572171d7aul, Method_72171d7a));
            si.AddMethod(new NetService.ServiceMethod(0xbd21d325545adc8bul, Method_545adc8b));
            return si;
        }

        private NetsphereTest.ExternalServiceImpl impl;
    }

    private class Backend_ca12b263
    {
        public Backend_ca12b263(IServiceProvider? serviceProvider, ServiceContext context)
        {
            var impl = serviceProvider?.GetService(typeof(NetsphereTest.ParentClass.NestedServiceImpl3)) as NetsphereTest.ParentClass.NestedServiceImpl3;
            if (impl == null)
            {
                impl = new NetsphereTest.ParentClass.NestedServiceImpl3();
            }

            this.impl = impl;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_1d115886(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<(string, int)>(receive, out var value))
            {
                return default;
            }

            await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).Send3(value.Item1, value.Item2);
            var result = NetResult.Success;
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_8883a265(object obj, ByteArrayPool.MemoryOwner receive)
        {
            if (!LP.Block.BlockService.TryDeserialize<int>(receive, out var value))
            {
                return default;
            }

            var result = await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).Increment3(value);
            LP.Block.BlockService.TrySerialize(result, out var send);
            return send;
        }

        private static async NetTask<ByteArrayPool.MemoryOwner> Method_af7da796(object obj, ByteArrayPool.MemoryOwner receive)
        {
            var value = receive;

            var result = await ((NetsphereTest.ITestService3)((Backend_ca12b263)obj).impl).SendMemoryOwner(value);
            return result;
        }

        public static NetService.ServiceInfo ServiceInfo_cd1942b1()
        {
            var si = new NetService.ServiceInfo(0xcd1942b1u, static (x, y) => new Backend_ca12b263(x, y));
            si.AddMethod(new NetService.ServiceMethod(0xcd1942b11d115886ul, Method_1d115886));
            si.AddMethod(new NetService.ServiceMethod(0xcd1942b18883a265ul, Method_8883a265));
            si.AddMethod(new NetService.ServiceMethod(0xcd1942b1af7da796ul, Method_af7da796));
            return si;
        }

        private NetsphereTest.ParentClass.NestedServiceImpl3 impl;
    }
}
